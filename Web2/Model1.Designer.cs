//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace Botfair.Web2
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class botfairEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new botfairEntities object using the connection string found in the 'botfairEntities' section of the application configuration file.
        /// </summary>
        public botfairEntities() : base("name=botfairEntities", "botfairEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new botfairEntities object.
        /// </summary>
        public botfairEntities(string connectionString) : base(connectionString, "botfairEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new botfairEntities object.
        /// </summary>
        public botfairEntities(EntityConnection connection) : base(connection, "botfairEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Configuration> Configurations
        {
            get
            {
                if ((_Configurations == null))
                {
                    _Configurations = base.CreateObjectSet<Configuration>("Configurations");
                }
                return _Configurations;
            }
        }
        private ObjectSet<Configuration> _Configurations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventType> EventTypes
        {
            get
            {
                if ((_EventTypes == null))
                {
                    _EventTypes = base.CreateObjectSet<EventType>("EventTypes");
                }
                return _EventTypes;
            }
        }
        private ObjectSet<EventType> _EventTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Log> Logs
        {
            get
            {
                if ((_Logs == null))
                {
                    _Logs = base.CreateObjectSet<Log>("Logs");
                }
                return _Logs;
            }
        }
        private ObjectSet<Log> _Logs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Market> Markets
        {
            get
            {
                if ((_Markets == null))
                {
                    _Markets = base.CreateObjectSet<Market>("Markets");
                }
                return _Markets;
            }
        }
        private ObjectSet<Market> _Markets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PriceTrack> PriceTracks
        {
            get
            {
                if ((_PriceTracks == null))
                {
                    _PriceTracks = base.CreateObjectSet<PriceTrack>("PriceTracks");
                }
                return _PriceTracks;
            }
        }
        private ObjectSet<PriceTrack> _PriceTracks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Selection> Selections
        {
            get
            {
                if ((_Selections == null))
                {
                    _Selections = base.CreateObjectSet<Selection>("Selections");
                }
                return _Selections;
            }
        }
        private ObjectSet<Selection> _Selections;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_SelectionsWithTracks> V_SelectionsWithTracks
        {
            get
            {
                if ((_V_SelectionsWithTracks == null))
                {
                    _V_SelectionsWithTracks = base.CreateObjectSet<V_SelectionsWithTracks>("V_SelectionsWithTracks");
                }
                return _V_SelectionsWithTracks;
            }
        }
        private ObjectSet<V_SelectionsWithTracks> _V_SelectionsWithTracks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_MarketsWithTracks> V_MarketsWithTracks
        {
            get
            {
                if ((_V_MarketsWithTracks == null))
                {
                    _V_MarketsWithTracks = base.CreateObjectSet<V_MarketsWithTracks>("V_MarketsWithTracks");
                }
                return _V_MarketsWithTracks;
            }
        }
        private ObjectSet<V_MarketsWithTracks> _V_MarketsWithTracks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BetMaster> BetMasters
        {
            get
            {
                if ((_BetMasters == null))
                {
                    _BetMasters = base.CreateObjectSet<BetMaster>("BetMasters");
                }
                return _BetMasters;
            }
        }
        private ObjectSet<BetMaster> _BetMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bet> Bets
        {
            get
            {
                if ((_Bets == null))
                {
                    _Bets = base.CreateObjectSet<Bet>("Bets");
                }
                return _Bets;
            }
        }
        private ObjectSet<Bet> _Bets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_Bets> V_Bets
        {
            get
            {
                if ((_V_Bets == null))
                {
                    _V_Bets = base.CreateObjectSet<V_Bets>("V_Bets");
                }
                return _V_Bets;
            }
        }
        private ObjectSet<V_Bets> _V_Bets;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Configurations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfigurations(Configuration configuration)
        {
            base.AddObject("Configurations", configuration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTypes(EventType eventType)
        {
            base.AddObject("EventTypes", eventType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogs(Log log)
        {
            base.AddObject("Logs", log);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Markets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMarkets(Market market)
        {
            base.AddObject("Markets", market);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PriceTracks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPriceTracks(PriceTrack priceTrack)
        {
            base.AddObject("PriceTracks", priceTrack);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Selections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSelections(Selection selection)
        {
            base.AddObject("Selections", selection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_SelectionsWithTracks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_SelectionsWithTracks(V_SelectionsWithTracks v_SelectionsWithTracks)
        {
            base.AddObject("V_SelectionsWithTracks", v_SelectionsWithTracks);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_MarketsWithTracks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_MarketsWithTracks(V_MarketsWithTracks v_MarketsWithTracks)
        {
            base.AddObject("V_MarketsWithTracks", v_MarketsWithTracks);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BetMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBetMasters(BetMaster betMaster)
        {
            base.AddObject("BetMasters", betMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Bets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBets(Bet bet)
        {
            base.AddObject("Bets", bet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_Bets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_Bets(V_Bets v_Bets)
        {
            base.AddObject("V_Bets", v_Bets);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="botfairModel", Name="Bet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bet object.
        /// </summary>
        /// <param name="fk_market">Initial value of the fk_market property.</param>
        /// <param name="fk_selection">Initial value of the fk_selection property.</param>
        /// <param name="isLay">Initial value of the isLay property.</param>
        /// <param name="masterId">Initial value of the masterId property.</param>
        public static Bet CreateBet(global::System.Int32 fk_market, global::System.Int32 fk_selection, global::System.Boolean isLay, global::System.Int32 masterId)
        {
            Bet bet = new Bet();
            bet.fk_market = fk_market;
            bet.fk_selection = fk_selection;
            bet.isLay = isLay;
            bet.masterId = masterId;
            return bet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fk_market
        {
            get
            {
                return _fk_market;
            }
            set
            {
                if (_fk_market != value)
                {
                    Onfk_marketChanging(value);
                    ReportPropertyChanging("fk_market");
                    _fk_market = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("fk_market");
                    Onfk_marketChanged();
                }
            }
        }
        private global::System.Int32 _fk_market;
        partial void Onfk_marketChanging(global::System.Int32 value);
        partial void Onfk_marketChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fk_selection
        {
            get
            {
                return _fk_selection;
            }
            set
            {
                if (_fk_selection != value)
                {
                    Onfk_selectionChanging(value);
                    ReportPropertyChanging("fk_selection");
                    _fk_selection = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("fk_selection");
                    Onfk_selectionChanged();
                }
            }
        }
        private global::System.Int32 _fk_selection;
        partial void Onfk_selectionChanging(global::System.Int32 value);
        partial void Onfk_selectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> amount
        {
            get
            {
                return _amount;
            }
            set
            {
                OnamountChanging(value);
                ReportPropertyChanging("amount");
                _amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("amount");
                OnamountChanged();
            }
        }
        private Nullable<global::System.Double> _amount;
        partial void OnamountChanging(Nullable<global::System.Double> value);
        partial void OnamountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isLay
        {
            get
            {
                return _isLay;
            }
            set
            {
                if (_isLay != value)
                {
                    OnisLayChanging(value);
                    ReportPropertyChanging("isLay");
                    _isLay = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("isLay");
                    OnisLayChanged();
                }
            }
        }
        private global::System.Boolean _isLay;
        partial void OnisLayChanging(global::System.Boolean value);
        partial void OnisLayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> firstPrice
        {
            get
            {
                return _firstPrice;
            }
            set
            {
                OnfirstPriceChanging(value);
                ReportPropertyChanging("firstPrice");
                _firstPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("firstPrice");
                OnfirstPriceChanged();
            }
        }
        private Nullable<global::System.Double> _firstPrice;
        partial void OnfirstPriceChanging(Nullable<global::System.Double> value);
        partial void OnfirstPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> currentPrice
        {
            get
            {
                return _currentPrice;
            }
            set
            {
                OncurrentPriceChanging(value);
                ReportPropertyChanging("currentPrice");
                _currentPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("currentPrice");
                OncurrentPriceChanged();
            }
        }
        private Nullable<global::System.Double> _currentPrice;
        partial void OncurrentPriceChanging(Nullable<global::System.Double> value);
        partial void OncurrentPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> pricePosted
        {
            get
            {
                return _pricePosted;
            }
            set
            {
                OnpricePostedChanging(value);
                ReportPropertyChanging("pricePosted");
                _pricePosted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pricePosted");
                OnpricePostedChanged();
            }
        }
        private Nullable<global::System.Double> _pricePosted;
        partial void OnpricePostedChanging(Nullable<global::System.Double> value);
        partial void OnpricePostedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> sizePosted
        {
            get
            {
                return _sizePosted;
            }
            set
            {
                OnsizePostedChanging(value);
                ReportPropertyChanging("sizePosted");
                _sizePosted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sizePosted");
                OnsizePostedChanged();
            }
        }
        private Nullable<global::System.Double> _sizePosted;
        partial void OnsizePostedChanging(Nullable<global::System.Double> value);
        partial void OnsizePostedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> datePosted
        {
            get
            {
                return _datePosted;
            }
            set
            {
                OndatePostedChanging(value);
                ReportPropertyChanging("datePosted");
                _datePosted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("datePosted");
                OndatePostedChanged();
            }
        }
        private Nullable<global::System.DateTime> _datePosted;
        partial void OndatePostedChanging(Nullable<global::System.DateTime> value);
        partial void OndatePostedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String errorCode
        {
            get
            {
                return _errorCode;
            }
            set
            {
                OnerrorCodeChanging(value);
                ReportPropertyChanging("errorCode");
                _errorCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("errorCode");
                OnerrorCodeChanged();
            }
        }
        private global::System.String _errorCode;
        partial void OnerrorCodeChanging(global::System.String value);
        partial void OnerrorCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> betFairId
        {
            get
            {
                return _betFairId;
            }
            set
            {
                OnbetFairIdChanging(value);
                ReportPropertyChanging("betFairId");
                _betFairId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("betFairId");
                OnbetFairIdChanged();
            }
        }
        private Nullable<global::System.Int64> _betFairId;
        partial void OnbetFairIdChanging(Nullable<global::System.Int64> value);
        partial void OnbetFairIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 masterId
        {
            get
            {
                return _masterId;
            }
            set
            {
                OnmasterIdChanging(value);
                ReportPropertyChanging("masterId");
                _masterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("masterId");
                OnmasterIdChanged();
            }
        }
        private global::System.Int32 _masterId;
        partial void OnmasterIdChanging(global::System.Int32 value);
        partial void OnmasterIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="botfairModel", Name="BetMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BetMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BetMaster object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="class">Initial value of the class property.</param>
        public static BetMaster CreateBetMaster(global::System.Int32 id, global::System.String @class)
        {
            BetMaster betMaster = new BetMaster();
            betMaster.id = id;
            betMaster.@class = @class;
            return betMaster;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String @class
        {
            get
            {
                return _class;
            }
            set
            {
                OnclassChanging(value);
                ReportPropertyChanging("class");
                _class = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("class");
                OnclassChanged();
            }
        }
        private global::System.String _class;
        partial void OnclassChanging(global::System.String value);
        partial void OnclassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> active
        {
            get
            {
                return _active;
            }
            set
            {
                OnactiveChanging(value);
                ReportPropertyChanging("active");
                _active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("active");
                OnactiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _active;
        partial void OnactiveChanging(Nullable<global::System.Boolean> value);
        partial void OnactiveChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="botfairModel", Name="Configuration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Configuration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Configuration object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="hotMarketsSeconds">Initial value of the hotMarketsSeconds property.</param>
        /// <param name="percentage">Initial value of the percentage property.</param>
        /// <param name="riskValue">Initial value of the riskValue property.</param>
        /// <param name="newMarketsPeriod">Initial value of the newMarketsPeriod property.</param>
        public static Configuration CreateConfiguration(global::System.Int32 id, global::System.Int32 hotMarketsSeconds, global::System.Double percentage, global::System.Int32 riskValue, global::System.Int32 newMarketsPeriod)
        {
            Configuration configuration = new Configuration();
            configuration.id = id;
            configuration.hotMarketsSeconds = hotMarketsSeconds;
            configuration.percentage = percentage;
            configuration.riskValue = riskValue;
            configuration.newMarketsPeriod = newMarketsPeriod;
            return configuration;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 hotMarketsSeconds
        {
            get
            {
                return _hotMarketsSeconds;
            }
            set
            {
                OnhotMarketsSecondsChanging(value);
                ReportPropertyChanging("hotMarketsSeconds");
                _hotMarketsSeconds = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("hotMarketsSeconds");
                OnhotMarketsSecondsChanged();
            }
        }
        private global::System.Int32 _hotMarketsSeconds;
        partial void OnhotMarketsSecondsChanging(global::System.Int32 value);
        partial void OnhotMarketsSecondsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double percentage
        {
            get
            {
                return _percentage;
            }
            set
            {
                OnpercentageChanging(value);
                ReportPropertyChanging("percentage");
                _percentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("percentage");
                OnpercentageChanged();
            }
        }
        private global::System.Double _percentage;
        partial void OnpercentageChanging(global::System.Double value);
        partial void OnpercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 riskValue
        {
            get
            {
                return _riskValue;
            }
            set
            {
                OnriskValueChanging(value);
                ReportPropertyChanging("riskValue");
                _riskValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("riskValue");
                OnriskValueChanged();
            }
        }
        private global::System.Int32 _riskValue;
        partial void OnriskValueChanging(global::System.Int32 value);
        partial void OnriskValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 newMarketsPeriod
        {
            get
            {
                return _newMarketsPeriod;
            }
            set
            {
                OnnewMarketsPeriodChanging(value);
                ReportPropertyChanging("newMarketsPeriod");
                _newMarketsPeriod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("newMarketsPeriod");
                OnnewMarketsPeriodChanged();
            }
        }
        private global::System.Int32 _newMarketsPeriod;
        partial void OnnewMarketsPeriodChanging(global::System.Int32 value);
        partial void OnnewMarketsPeriodChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="botfairModel", Name="EventType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventType object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static EventType CreateEventType(global::System.Int32 id)
        {
            EventType eventType = new EventType();
            eventType.id = id;
            return eventType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="botfairModel", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Log object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="type">Initial value of the type property.</param>
        /// <param name="date">Initial value of the date property.</param>
        public static Log CreateLog(global::System.Int64 id, global::System.String type, global::System.DateTime date)
        {
            Log log = new Log();
            log.id = id;
            log.type = type;
            log.date = date;
            return log;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String message
        {
            get
            {
                return _message;
            }
            set
            {
                OnmessageChanging(value);
                ReportPropertyChanging("message");
                _message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("message");
                OnmessageChanged();
            }
        }
        private global::System.String _message;
        partial void OnmessageChanging(global::System.String value);
        partial void OnmessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> eventId
        {
            get
            {
                return _eventId;
            }
            set
            {
                OneventIdChanging(value);
                ReportPropertyChanging("eventId");
                _eventId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("eventId");
                OneventIdChanged();
            }
        }
        private Nullable<global::System.Int32> _eventId;
        partial void OneventIdChanging(Nullable<global::System.Int32> value);
        partial void OneventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private global::System.DateTime _date;
        partial void OndateChanging(global::System.DateTime value);
        partial void OndateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="botfairModel", Name="Market")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Market : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Market object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="eventType">Initial value of the eventType property.</param>
        /// <param name="isHot">Initial value of the isHot property.</param>
        /// <param name="interval">Initial value of the interval property.</param>
        /// <param name="marketStatus">Initial value of the marketStatus property.</param>
        /// <param name="timeScanned">Initial value of the timeScanned property.</param>
        /// <param name="wasHot">Initial value of the wasHot property.</param>
        public static Market CreateMarket(global::System.Int32 id, global::System.Int32 eventType, global::System.Boolean isHot, global::System.Int32 interval, global::System.String marketStatus, global::System.DateTime timeScanned, global::System.Boolean wasHot)
        {
            Market market = new Market();
            market.id = id;
            market.eventType = eventType;
            market.isHot = isHot;
            market.interval = interval;
            market.marketStatus = marketStatus;
            market.timeScanned = timeScanned;
            market.wasHot = wasHot;
            return market;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String menuPath
        {
            get
            {
                return _menuPath;
            }
            set
            {
                OnmenuPathChanging(value);
                ReportPropertyChanging("menuPath");
                _menuPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("menuPath");
                OnmenuPathChanged();
            }
        }
        private global::System.String _menuPath;
        partial void OnmenuPathChanging(global::System.String value);
        partial void OnmenuPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> totalAmount
        {
            get
            {
                return _totalAmount;
            }
            set
            {
                OntotalAmountChanging(value);
                ReportPropertyChanging("totalAmount");
                _totalAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("totalAmount");
                OntotalAmountChanged();
            }
        }
        private Nullable<global::System.Double> _totalAmount;
        partial void OntotalAmountChanging(Nullable<global::System.Double> value);
        partial void OntotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> eventDate
        {
            get
            {
                return _eventDate;
            }
            set
            {
                OneventDateChanging(value);
                ReportPropertyChanging("eventDate");
                _eventDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("eventDate");
                OneventDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _eventDate;
        partial void OneventDateChanging(Nullable<global::System.DateTime> value);
        partial void OneventDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 eventType
        {
            get
            {
                return _eventType;
            }
            set
            {
                OneventTypeChanging(value);
                ReportPropertyChanging("eventType");
                _eventType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("eventType");
                OneventTypeChanged();
            }
        }
        private global::System.Int32 _eventType;
        partial void OneventTypeChanging(global::System.Int32 value);
        partial void OneventTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String eventHierarchy
        {
            get
            {
                return _eventHierarchy;
            }
            set
            {
                OneventHierarchyChanging(value);
                ReportPropertyChanging("eventHierarchy");
                _eventHierarchy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("eventHierarchy");
                OneventHierarchyChanged();
            }
        }
        private global::System.String _eventHierarchy;
        partial void OneventHierarchyChanging(global::System.String value);
        partial void OneventHierarchyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String betDelay
        {
            get
            {
                return _betDelay;
            }
            set
            {
                OnbetDelayChanging(value);
                ReportPropertyChanging("betDelay");
                _betDelay = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("betDelay");
                OnbetDelayChanged();
            }
        }
        private global::System.String _betDelay;
        partial void OnbetDelayChanging(global::System.String value);
        partial void OnbetDelayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> runners
        {
            get
            {
                return _runners;
            }
            set
            {
                OnrunnersChanging(value);
                ReportPropertyChanging("runners");
                _runners = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("runners");
                OnrunnersChanged();
            }
        }
        private Nullable<global::System.Int32> _runners;
        partial void OnrunnersChanging(Nullable<global::System.Int32> value);
        partial void OnrunnersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> winners
        {
            get
            {
                return _winners;
            }
            set
            {
                OnwinnersChanging(value);
                ReportPropertyChanging("winners");
                _winners = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("winners");
                OnwinnersChanged();
            }
        }
        private Nullable<global::System.Int32> _winners;
        partial void OnwinnersChanging(Nullable<global::System.Int32> value);
        partial void OnwinnersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> bspMarket
        {
            get
            {
                return _bspMarket;
            }
            set
            {
                OnbspMarketChanging(value);
                ReportPropertyChanging("bspMarket");
                _bspMarket = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bspMarket");
                OnbspMarketChanged();
            }
        }
        private Nullable<global::System.Boolean> _bspMarket;
        partial void OnbspMarketChanging(Nullable<global::System.Boolean> value);
        partial void OnbspMarketChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> turningInPlay
        {
            get
            {
                return _turningInPlay;
            }
            set
            {
                OnturningInPlayChanging(value);
                ReportPropertyChanging("turningInPlay");
                _turningInPlay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("turningInPlay");
                OnturningInPlayChanged();
            }
        }
        private Nullable<global::System.Boolean> _turningInPlay;
        partial void OnturningInPlayChanging(Nullable<global::System.Boolean> value);
        partial void OnturningInPlayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isHot
        {
            get
            {
                return _isHot;
            }
            set
            {
                OnisHotChanging(value);
                ReportPropertyChanging("isHot");
                _isHot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isHot");
                OnisHotChanged();
            }
        }
        private global::System.Boolean _isHot;
        partial void OnisHotChanging(global::System.Boolean value);
        partial void OnisHotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 interval
        {
            get
            {
                return _interval;
            }
            set
            {
                OnintervalChanging(value);
                ReportPropertyChanging("interval");
                _interval = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("interval");
                OnintervalChanged();
            }
        }
        private global::System.Int32 _interval;
        partial void OnintervalChanging(global::System.Int32 value);
        partial void OnintervalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String country
        {
            get
            {
                return _country;
            }
            set
            {
                OncountryChanging(value);
                ReportPropertyChanging("country");
                _country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("country");
                OncountryChanged();
            }
        }
        private global::System.String _country;
        partial void OncountryChanging(global::System.String value);
        partial void OncountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String marketStatus
        {
            get
            {
                return _marketStatus;
            }
            set
            {
                OnmarketStatusChanging(value);
                ReportPropertyChanging("marketStatus");
                _marketStatus = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("marketStatus");
                OnmarketStatusChanged();
            }
        }
        private global::System.String _marketStatus;
        partial void OnmarketStatusChanging(global::System.String value);
        partial void OnmarketStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime timeScanned
        {
            get
            {
                return _timeScanned;
            }
            set
            {
                OntimeScannedChanging(value);
                ReportPropertyChanging("timeScanned");
                _timeScanned = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("timeScanned");
                OntimeScannedChanged();
            }
        }
        private global::System.DateTime _timeScanned;
        partial void OntimeScannedChanging(global::System.DateTime value);
        partial void OntimeScannedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean wasHot
        {
            get
            {
                return _wasHot;
            }
            set
            {
                OnwasHotChanging(value);
                ReportPropertyChanging("wasHot");
                _wasHot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("wasHot");
                OnwasHotChanged();
            }
        }
        private global::System.Boolean _wasHot;
        partial void OnwasHotChanging(global::System.Boolean value);
        partial void OnwasHotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> marketSuspendTime
        {
            get
            {
                return _marketSuspendTime;
            }
            set
            {
                OnmarketSuspendTimeChanging(value);
                ReportPropertyChanging("marketSuspendTime");
                _marketSuspendTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("marketSuspendTime");
                OnmarketSuspendTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _marketSuspendTime;
        partial void OnmarketSuspendTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnmarketSuspendTimeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="botfairModel", Name="PriceTrack")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PriceTrack : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PriceTrack object.
        /// </summary>
        /// <param name="fk_market">Initial value of the fk_market property.</param>
        /// <param name="fk_selection">Initial value of the fk_selection property.</param>
        /// <param name="priceDate">Initial value of the priceDate property.</param>
        /// <param name="isLay">Initial value of the isLay property.</param>
        /// <param name="price">Initial value of the price property.</param>
        public static PriceTrack CreatePriceTrack(global::System.Int32 fk_market, global::System.Int32 fk_selection, global::System.DateTime priceDate, global::System.Boolean isLay, global::System.Double price)
        {
            PriceTrack priceTrack = new PriceTrack();
            priceTrack.fk_market = fk_market;
            priceTrack.fk_selection = fk_selection;
            priceTrack.priceDate = priceDate;
            priceTrack.isLay = isLay;
            priceTrack.price = price;
            return priceTrack;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fk_market
        {
            get
            {
                return _fk_market;
            }
            set
            {
                if (_fk_market != value)
                {
                    Onfk_marketChanging(value);
                    ReportPropertyChanging("fk_market");
                    _fk_market = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("fk_market");
                    Onfk_marketChanged();
                }
            }
        }
        private global::System.Int32 _fk_market;
        partial void Onfk_marketChanging(global::System.Int32 value);
        partial void Onfk_marketChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fk_selection
        {
            get
            {
                return _fk_selection;
            }
            set
            {
                if (_fk_selection != value)
                {
                    Onfk_selectionChanging(value);
                    ReportPropertyChanging("fk_selection");
                    _fk_selection = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("fk_selection");
                    Onfk_selectionChanged();
                }
            }
        }
        private global::System.Int32 _fk_selection;
        partial void Onfk_selectionChanging(global::System.Int32 value);
        partial void Onfk_selectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime priceDate
        {
            get
            {
                return _priceDate;
            }
            set
            {
                if (_priceDate != value)
                {
                    OnpriceDateChanging(value);
                    ReportPropertyChanging("priceDate");
                    _priceDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("priceDate");
                    OnpriceDateChanged();
                }
            }
        }
        private global::System.DateTime _priceDate;
        partial void OnpriceDateChanging(global::System.DateTime value);
        partial void OnpriceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isLay
        {
            get
            {
                return _isLay;
            }
            set
            {
                if (_isLay != value)
                {
                    OnisLayChanging(value);
                    ReportPropertyChanging("isLay");
                    _isLay = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("isLay");
                    OnisLayChanged();
                }
            }
        }
        private global::System.Boolean _isLay;
        partial void OnisLayChanging(global::System.Boolean value);
        partial void OnisLayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double price
        {
            get
            {
                return _price;
            }
            set
            {
                OnpriceChanging(value);
                ReportPropertyChanging("price");
                _price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("price");
                OnpriceChanged();
            }
        }
        private global::System.Double _price;
        partial void OnpriceChanging(global::System.Double value);
        partial void OnpriceChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="botfairModel", Name="Selection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Selection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Selection object.
        /// </summary>
        /// <param name="marketId">Initial value of the marketId property.</param>
        /// <param name="selectionId">Initial value of the selectionId property.</param>
        /// <param name="tracked">Initial value of the tracked property.</param>
        /// <param name="position">Initial value of the position property.</param>
        public static Selection CreateSelection(global::System.Int32 marketId, global::System.Int32 selectionId, global::System.Boolean tracked, global::System.Int32 position)
        {
            Selection selection = new Selection();
            selection.marketId = marketId;
            selection.selectionId = selectionId;
            selection.tracked = tracked;
            selection.position = position;
            return selection;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 marketId
        {
            get
            {
                return _marketId;
            }
            set
            {
                if (_marketId != value)
                {
                    OnmarketIdChanging(value);
                    ReportPropertyChanging("marketId");
                    _marketId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("marketId");
                    OnmarketIdChanged();
                }
            }
        }
        private global::System.Int32 _marketId;
        partial void OnmarketIdChanging(global::System.Int32 value);
        partial void OnmarketIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 selectionId
        {
            get
            {
                return _selectionId;
            }
            set
            {
                if (_selectionId != value)
                {
                    OnselectionIdChanging(value);
                    ReportPropertyChanging("selectionId");
                    _selectionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("selectionId");
                    OnselectionIdChanged();
                }
            }
        }
        private global::System.Int32 _selectionId;
        partial void OnselectionIdChanging(global::System.Int32 value);
        partial void OnselectionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean tracked
        {
            get
            {
                return _tracked;
            }
            set
            {
                OntrackedChanging(value);
                ReportPropertyChanging("tracked");
                _tracked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("tracked");
                OntrackedChanged();
            }
        }
        private global::System.Boolean _tracked;
        partial void OntrackedChanging(global::System.Boolean value);
        partial void OntrackedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 position
        {
            get
            {
                return _position;
            }
            set
            {
                OnpositionChanging(value);
                ReportPropertyChanging("position");
                _position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("position");
                OnpositionChanged();
            }
        }
        private global::System.Int32 _position;
        partial void OnpositionChanging(global::System.Int32 value);
        partial void OnpositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> asianLineId
        {
            get
            {
                return _asianLineId;
            }
            set
            {
                OnasianLineIdChanging(value);
                ReportPropertyChanging("asianLineId");
                _asianLineId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("asianLineId");
                OnasianLineIdChanged();
            }
        }
        private Nullable<global::System.Int32> _asianLineId;
        partial void OnasianLineIdChanging(Nullable<global::System.Int32> value);
        partial void OnasianLineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> handicap
        {
            get
            {
                return _handicap;
            }
            set
            {
                OnhandicapChanging(value);
                ReportPropertyChanging("handicap");
                _handicap = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("handicap");
                OnhandicapChanged();
            }
        }
        private Nullable<global::System.Double> _handicap;
        partial void OnhandicapChanging(Nullable<global::System.Double> value);
        partial void OnhandicapChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="botfairModel", Name="V_Bets")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_Bets : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_Bets object.
        /// </summary>
        /// <param name="marketId">Initial value of the marketId property.</param>
        /// <param name="fk_market">Initial value of the fk_market property.</param>
        /// <param name="fk_selection">Initial value of the fk_selection property.</param>
        /// <param name="isLay">Initial value of the isLay property.</param>
        /// <param name="masterId">Initial value of the masterId property.</param>
        public static V_Bets CreateV_Bets(global::System.Int32 marketId, global::System.Int32 fk_market, global::System.Int32 fk_selection, global::System.Boolean isLay, global::System.Int32 masterId)
        {
            V_Bets v_Bets = new V_Bets();
            v_Bets.marketId = marketId;
            v_Bets.fk_market = fk_market;
            v_Bets.fk_selection = fk_selection;
            v_Bets.isLay = isLay;
            v_Bets.masterId = masterId;
            return v_Bets;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 marketId
        {
            get
            {
                return _marketId;
            }
            set
            {
                if (_marketId != value)
                {
                    OnmarketIdChanging(value);
                    ReportPropertyChanging("marketId");
                    _marketId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("marketId");
                    OnmarketIdChanged();
                }
            }
        }
        private global::System.Int32 _marketId;
        partial void OnmarketIdChanging(global::System.Int32 value);
        partial void OnmarketIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> eventDate
        {
            get
            {
                return _eventDate;
            }
            set
            {
                OneventDateChanging(value);
                ReportPropertyChanging("eventDate");
                _eventDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("eventDate");
                OneventDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _eventDate;
        partial void OneventDateChanging(Nullable<global::System.DateTime> value);
        partial void OneventDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String selectionName
        {
            get
            {
                return _selectionName;
            }
            set
            {
                OnselectionNameChanging(value);
                ReportPropertyChanging("selectionName");
                _selectionName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("selectionName");
                OnselectionNameChanged();
            }
        }
        private global::System.String _selectionName;
        partial void OnselectionNameChanging(global::System.String value);
        partial void OnselectionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fk_market
        {
            get
            {
                return _fk_market;
            }
            set
            {
                if (_fk_market != value)
                {
                    Onfk_marketChanging(value);
                    ReportPropertyChanging("fk_market");
                    _fk_market = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("fk_market");
                    Onfk_marketChanged();
                }
            }
        }
        private global::System.Int32 _fk_market;
        partial void Onfk_marketChanging(global::System.Int32 value);
        partial void Onfk_marketChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 fk_selection
        {
            get
            {
                return _fk_selection;
            }
            set
            {
                if (_fk_selection != value)
                {
                    Onfk_selectionChanging(value);
                    ReportPropertyChanging("fk_selection");
                    _fk_selection = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("fk_selection");
                    Onfk_selectionChanged();
                }
            }
        }
        private global::System.Int32 _fk_selection;
        partial void Onfk_selectionChanging(global::System.Int32 value);
        partial void Onfk_selectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> amount
        {
            get
            {
                return _amount;
            }
            set
            {
                OnamountChanging(value);
                ReportPropertyChanging("amount");
                _amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("amount");
                OnamountChanged();
            }
        }
        private Nullable<global::System.Double> _amount;
        partial void OnamountChanging(Nullable<global::System.Double> value);
        partial void OnamountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isLay
        {
            get
            {
                return _isLay;
            }
            set
            {
                if (_isLay != value)
                {
                    OnisLayChanging(value);
                    ReportPropertyChanging("isLay");
                    _isLay = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("isLay");
                    OnisLayChanged();
                }
            }
        }
        private global::System.Boolean _isLay;
        partial void OnisLayChanging(global::System.Boolean value);
        partial void OnisLayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> firstPrice
        {
            get
            {
                return _firstPrice;
            }
            set
            {
                OnfirstPriceChanging(value);
                ReportPropertyChanging("firstPrice");
                _firstPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("firstPrice");
                OnfirstPriceChanged();
            }
        }
        private Nullable<global::System.Double> _firstPrice;
        partial void OnfirstPriceChanging(Nullable<global::System.Double> value);
        partial void OnfirstPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> currentPrice
        {
            get
            {
                return _currentPrice;
            }
            set
            {
                OncurrentPriceChanging(value);
                ReportPropertyChanging("currentPrice");
                _currentPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("currentPrice");
                OncurrentPriceChanged();
            }
        }
        private Nullable<global::System.Double> _currentPrice;
        partial void OncurrentPriceChanging(Nullable<global::System.Double> value);
        partial void OncurrentPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> pricePosted
        {
            get
            {
                return _pricePosted;
            }
            set
            {
                OnpricePostedChanging(value);
                ReportPropertyChanging("pricePosted");
                _pricePosted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pricePosted");
                OnpricePostedChanged();
            }
        }
        private Nullable<global::System.Double> _pricePosted;
        partial void OnpricePostedChanging(Nullable<global::System.Double> value);
        partial void OnpricePostedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> sizePosted
        {
            get
            {
                return _sizePosted;
            }
            set
            {
                OnsizePostedChanging(value);
                ReportPropertyChanging("sizePosted");
                _sizePosted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sizePosted");
                OnsizePostedChanged();
            }
        }
        private Nullable<global::System.Double> _sizePosted;
        partial void OnsizePostedChanging(Nullable<global::System.Double> value);
        partial void OnsizePostedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> datePosted
        {
            get
            {
                return _datePosted;
            }
            set
            {
                OndatePostedChanging(value);
                ReportPropertyChanging("datePosted");
                _datePosted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("datePosted");
                OndatePostedChanged();
            }
        }
        private Nullable<global::System.DateTime> _datePosted;
        partial void OndatePostedChanging(Nullable<global::System.DateTime> value);
        partial void OndatePostedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String errorCode
        {
            get
            {
                return _errorCode;
            }
            set
            {
                OnerrorCodeChanging(value);
                ReportPropertyChanging("errorCode");
                _errorCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("errorCode");
                OnerrorCodeChanged();
            }
        }
        private global::System.String _errorCode;
        partial void OnerrorCodeChanging(global::System.String value);
        partial void OnerrorCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> betFairId
        {
            get
            {
                return _betFairId;
            }
            set
            {
                OnbetFairIdChanging(value);
                ReportPropertyChanging("betFairId");
                _betFairId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("betFairId");
                OnbetFairIdChanged();
            }
        }
        private Nullable<global::System.Int64> _betFairId;
        partial void OnbetFairIdChanging(Nullable<global::System.Int64> value);
        partial void OnbetFairIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 masterId
        {
            get
            {
                return _masterId;
            }
            set
            {
                if (_masterId != value)
                {
                    OnmasterIdChanging(value);
                    ReportPropertyChanging("masterId");
                    _masterId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("masterId");
                    OnmasterIdChanged();
                }
            }
        }
        private global::System.Int32 _masterId;
        partial void OnmasterIdChanging(global::System.Int32 value);
        partial void OnmasterIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="botfairModel", Name="V_MarketsWithTracks")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_MarketsWithTracks : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_MarketsWithTracks object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="isHot">Initial value of the isHot property.</param>
        public static V_MarketsWithTracks CreateV_MarketsWithTracks(global::System.Int32 id, global::System.Boolean isHot)
        {
            V_MarketsWithTracks v_MarketsWithTracks = new V_MarketsWithTracks();
            v_MarketsWithTracks.id = id;
            v_MarketsWithTracks.isHot = isHot;
            return v_MarketsWithTracks;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> eventdate
        {
            get
            {
                return _eventdate;
            }
            set
            {
                OneventdateChanging(value);
                ReportPropertyChanging("eventdate");
                _eventdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("eventdate");
                OneventdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _eventdate;
        partial void OneventdateChanging(Nullable<global::System.DateTime> value);
        partial void OneventdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isHot
        {
            get
            {
                return _isHot;
            }
            set
            {
                if (_isHot != value)
                {
                    OnisHotChanging(value);
                    ReportPropertyChanging("isHot");
                    _isHot = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("isHot");
                    OnisHotChanged();
                }
            }
        }
        private global::System.Boolean _isHot;
        partial void OnisHotChanging(global::System.Boolean value);
        partial void OnisHotChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="botfairModel", Name="V_SelectionsWithTracks")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_SelectionsWithTracks : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_SelectionsWithTracks object.
        /// </summary>
        /// <param name="selectionId">Initial value of the selectionId property.</param>
        /// <param name="marketId">Initial value of the marketId property.</param>
        public static V_SelectionsWithTracks CreateV_SelectionsWithTracks(global::System.Int32 selectionId, global::System.Int32 marketId)
        {
            V_SelectionsWithTracks v_SelectionsWithTracks = new V_SelectionsWithTracks();
            v_SelectionsWithTracks.selectionId = selectionId;
            v_SelectionsWithTracks.marketId = marketId;
            return v_SelectionsWithTracks;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 selectionId
        {
            get
            {
                return _selectionId;
            }
            set
            {
                if (_selectionId != value)
                {
                    OnselectionIdChanging(value);
                    ReportPropertyChanging("selectionId");
                    _selectionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("selectionId");
                    OnselectionIdChanged();
                }
            }
        }
        private global::System.Int32 _selectionId;
        partial void OnselectionIdChanging(global::System.Int32 value);
        partial void OnselectionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 marketId
        {
            get
            {
                return _marketId;
            }
            set
            {
                if (_marketId != value)
                {
                    OnmarketIdChanging(value);
                    ReportPropertyChanging("marketId");
                    _marketId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("marketId");
                    OnmarketIdChanged();
                }
            }
        }
        private global::System.Int32 _marketId;
        partial void OnmarketIdChanging(global::System.Int32 value);
        partial void OnmarketIdChanged();

        #endregion
    
    }

    #endregion
    
}
